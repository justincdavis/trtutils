"""
This type stub file was generated by pyright.
"""

import numpy as np
from numpy.lib.stride_tricks import as_strided as _as_strided

__copyright__ = ...
__license__ = ...
def f_contiguous_strides(itemsize, shape): # -> tuple[Any, ...] | tuple[()]:
    ...

def c_contiguous_strides(itemsize, shape): # -> tuple[Any, ...] | tuple[()]:
    ...

def equal_strides(strides1, strides2, shape): # -> bool:
    ...

def is_f_contiguous_strides(strides, itemsize, shape): # -> Any | Literal[True]:
    ...

def is_c_contiguous_strides(strides, itemsize, shape): # -> Any | Literal[True]:
    ...

class ArrayFlags:
    def __init__(self, ary) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __str__(self) -> str:
        ...
    


def get_common_dtype(obj1, obj2, allow_double): # -> dtype[float32] | dtype[complex64] | dtype[floating[Any]]:
    ...

def bound(a): # -> tuple[Any, Any]:
    ...

def may_share_memory(a, b): # -> bool:
    ...

_test_dtype = ...
_test_result = _as_strided(np.zeros(10, dtype=_test_dtype))
if _test_result.dtype != _test_dtype:
    ...
as_strided = ...
