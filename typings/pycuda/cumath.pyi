"""
This type stub file was generated by pyright.
"""

fabs = ...
ceil = ...
floor = ...
exp = ...
log = ...
log10 = ...
sqrt = ...
sin = ...
cos = ...
tan = ...
asin = ...
acos = ...
atan = ...
sinh = ...
cosh = ...
tanh = ...
def fmod(arg, mod, stream=...): # -> GPUArray:
    """Return the floating point remainder of the division `arg/mod`,
    for each element in `arg` and `mod`."""
    ...

def frexp(arg, stream=...): # -> tuple[GPUArray, GPUArray]:
    """Return a tuple `(significands, exponents)` such that
    `arg == significand * 2**exponent`.
    """
    ...

def ldexp(significand, exponent, stream=...): # -> GPUArray:
    """Return a new array of floating point values composed from the
    entries of `significand` and `exponent`, paired together as
    `result = significand * 2**exponent`.
    """
    ...

def modf(arg, stream=...): # -> tuple[GPUArray, GPUArray]:
    """Return a tuple `(fracpart, intpart)` of arrays containing the
    integer and fractional parts of `arg`.
    """
    ...

